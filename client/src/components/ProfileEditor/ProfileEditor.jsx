import React, { useState } from "react";
import {
  Box,
  Button,
  Container,
  InputAdornment,
  TextField,
  Typography,
} from "@mui/material";
import LockOpenIcon from "@mui/icons-material/LockOpen";
import PhotoCamera from "@mui/icons-material/PhotoCamera";
import PersonIcon from "@mui/icons-material/Person";

import "./profileeditor.css";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate, useLocation } from "react-router-dom";
import { editUser } from "../../redux/actions/userActions";
export default function ProfileEditor() {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const location = useLocation();
  const { userName, userAvatar } = useSelector((store) => store.user);

  const [editName, setEditName] = useState(userName || "");
  const [addFile, setAddFile] = useState(null);
  const [editAvatar, setEditAvatar] = useState(userAvatar || "");

  const handleFileChange = (e) => {
    // –ü–æ–ª–µ e.target.files ‚Äî —ç—Ç–æ FileList, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–¥–∏–Ω —Ñ–∞–π–ª. –î–∞–∂–µ –µ—Å–ª–∏  —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª,
    // –±—Ä–∞—É–∑–µ—Ä –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤, –ø–æ—Ç–æ–º—É —á—Ç–æ: <input type="file"> –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    // <input type="file" multiple /> multiple - –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤.
    //     FileList {
    //   0: File { name: "file1.png", ... },
    //   1: File { name: "file2.jpg", ... },
    //   length: 2
    // }
    // –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Ö –≤ —Ü–∏–∫–ª–µ:
    // Array.from(e.target.files).forEach((file) => {
    //   console.log(file.name);
    // });
    const file = e.target.files[0];
    setAddFile(file);
    if (file) {
      // URL.createObjectURL(file)
      // üìå –°–æ–∑–¥–∞—ë—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL, —Å—Å—ã–ª–∞—é—â–∏–π—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª (–≤ –ø–∞–º—è—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞).
      // –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç URL –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è src –≤ <img>, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–∞–π–ª –ª–æ–∫–∞–ª—å–Ω–æ ‚Äî –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—è –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
      setEditAvatar(URL.createObjectURL(file));
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
  const handleNameChange = (e) => {
    setEditName(e.target.value);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    const formData = new FormData(); // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö
    if (editName.trim()) formData.append("name", editName); // –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è, –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
    if (addFile) formData.append("avatar", addFile); // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω
    await dispatch(editUser(formData)); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    //  –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const backTo = location.state?.from?.pathname || "/"; // –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –æ—Ç–∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª
    navigate(backTo);
  };

  return (
    <Container maxWidth="false" className="wrapper__register">
      <Box className="form">
        <Typography
          variant="h6"
          sx={{
            color: "#60a5fa",
            textTransform: "uppercase",
            mb: 2,
            fontWeight: 700,
          }}
        >
          –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        </Typography>

        {/* –§–æ—Ä–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
        <form
          onSubmit={handleSubmit}
          style={{
            display: "flex",
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
            textAlign: "center",
          }}
        >
          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ */}
          <TextField
            name="name"
            value={editName}
            onChange={handleNameChange}
            variant="outlined"
            placeholder="–ò–º—è"
            InputProps={{
              endAdornment: (
                <InputAdornment position="end">
                  <LockOpenIcon />
                </InputAdornment>
              ),
            }}
            sx={{
              backgroundColor: "transparent",
              input: {
                outline: "none",
                border: "none",
                borderBottom: "2px solid rgba(139, 78, 196, 0.37)",
                color: "rgb(78, 75, 75)",
                marginBottom: "25px",
              },
              "& .MuiOutlinedInput-notchedOutline": {
                border: "none",
              },
              marginBottom: "20px",
            }}
          />

          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞ */}
          <Button
            variant="contained"
            component="label"
            startIcon={<PhotoCamera />}
            sx={{ mt: 1, marginBottom: "25px" }}
          >
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä
            <input
              name="avatar"
              onChange={handleFileChange}
              type="file"
              hidden
              accept="image/*"
            />
          </Button>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã */}
          <Button
            type="submit"
            sx={{
              "&:hover": {
                color: "#60a5fa",
                background: "transparent",
                fontWeight: 500,
              },
            }}
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
          </Button>
        </form>
      </Box>
    </Container>
  );
}
